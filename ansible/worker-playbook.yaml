---
- hosts: all
  become: yes
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io

  - name: Add user to docker group
    user:
      name: "{{ worker_user }}"
      group: docker
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl
  - name: Creates kubernetes directory
    become: false
    file:
      path: "/home/{{ worker_user }}/kubernetes"
      state: directory
  - name: Install sshpass
    apt:
      name: sshpass
      state: present
      update_cache: yes
  - name: Check that the join-command.sh exists
    command: "sshpass -p {{ master_password }} ssh {{ master_user }}@{{ master_ip }} stat /home/{{ master_user }}/kubernetes/join-command.sh"  
    become: false
    register: stat_result
    until: stat_result.rc == 0
    retries: 30
    delay: 30
  - name: Copy join-command file from remote server
    command: "sshpass -p {{ master_password }} scp {{ master_user }}@{{ master_ip }}:/home/{{ master_user }}/kubernetes/join-command.sh /home/{{ worker_user }}/kubernetes"
    become: false
  - name: Join the node to cluster
    command: sh /home/{{ worker_user }}/kubernetes/join-command.sh
